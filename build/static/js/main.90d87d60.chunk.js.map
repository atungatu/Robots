{"version":3,"sources":["components/Card.js","components/Robots.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","details","className","src","alt","name","email","Robots","robots","filteredRobot","map","robot","length","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAeeA,EAZF,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QAChB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,UACpD,gCACI,6BAAKH,EAAQI,OACb,4BAAIJ,EAAQK,eCcbC,EApBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACRC,EACFD,EAAOE,KAAI,SAAAC,GACP,OACI,8BACI,cAAC,EAAD,CAAqBX,GAAIW,EAAMX,GAAIC,QAASU,GAAjCA,EAAMX,SAKjC,OAAyB,IAAlBQ,EAAOI,OACV,4CAEI,8BACKH,KCLFI,EAVG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,8BACI,uBAAOZ,UAAU,mCACba,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCKXI,G,MAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,iBAAkBC,OAAQ,SAApE,SACKJ,EAAMK,aC0CJC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACX,OAAU,GACV,YAAe,IAJL,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAE,OAAUS,S,oBAO7C,WACE,MAAgCC,KAAKN,MAA7BxB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVU,EACJ/B,EAAOgC,QAAO,SAAA7B,GAAK,OACjBA,EAAMN,KAAKoC,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKvC,UAAU,KAAf,UAGE,6CACA,cAAC,EAAD,CAAWY,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAEElB,OAAQ+B,GADH,c,GAjCCI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.90d87d60.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons';\n\nconst Card = ({ id, details }) => {\n    return (\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img src={`https://robohash.org/${id}?100x100`} alt=\"Robot\" />\n            <div>\n                <h2>{details.name}</h2>\n                <p>{details.email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport { robotList } from '../data/robotList'\nconst Robots = ({ robots }) => {\n    const filteredRobot =\n        robots.map(robot => {\n            return (\n                <div>\n                    <Card key={robot.id} id={robot.id} details={robot} />\n                </div>\n            )\n        }\n        );\n    return robots.length === 0 ?\n        <h1>loading...</h1>\n        : (\n            <div>\n                {filteredRobot}\n            </div>\n        );\n\n}\n\nexport default Robots;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div>\n            <input className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search friends'\n                onChange={searchChange} />\n        </div>\n    );\n}\nexport default SearchBox;\n","import React from 'react';\n\n\nconst Scroll = (props) => {\n\n    return (\n        <div style={{ overflow: 'scroll', border: '5px solid blue', height: '500px' }}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport default Scroll;\n","import React, { Component } from 'react';\nimport Robots from '../components/Robots';\nimport SearchBox from '../components/SearchBox';\nimport 'tachyons';\nimport './App.css'\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      'robots': [],\n      'searchField': ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ 'robots': users, }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots =\n      robots.filter(robot =>\n        robot.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return (\n      <div className='tc'>\n        {/* <Func para={'This is a function'} />\n        <Clas para={'This is a class'} /> */}\n        <h1>Robofriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <Robots\n            key={'1'}\n            robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}